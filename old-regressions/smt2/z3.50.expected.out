sat
(model 
  (define-fun b () Int
    0)
  (define-fun c () Int
    1236)
  (define-fun a () Int
    2)
  (define-fun p ((x!1 Int)) Bool
    true)
  (define-fun p2 ((x!1 Int)) Bool
    (ite (= x!1 2) true
      false))
  (define-fun f ((x!1 Int)) Int
    (ite (= x!1 2) 1
    (ite (= x!1 0) 0
    (ite (= x!1 1236) 1236
      (let ((a!1 (ite (or (not (p x!1)) (p2 x!1)) (+ 1 x!1) x!1)))
        (ite (p2 x!1) (+ (- 1) x!1) a!1))))))
)
