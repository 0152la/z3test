SATISFIABLE
 y x f
y -> 14
x -> 11
f -> [11 -> 3, 14 -> 1, else -> 3]
(+ 1.0 z)
1
0
3
2
[11, 3]
1
11
3
(solver
  (> x 10.0)
  (= y (+ x 3.0))
  (< y 15.0)
  (> (f x) 2.0)
  (not (= (f y) (f x)))
  (> (select a x) 10.0)
  (> (select a y) 20.0))
SATISFIABLE
(define-fun y () Real
  14.0)
(define-fun a () (Array Real Real)
  (_ as-array k!0))
(define-fun x () Real
  11.0)
(define-fun k!0 ((x!1 Real)) Real
  (ite (= x!1 11.0) 49.0
  (ite (= x!1 14.0) 21.0
    49.0)))
(define-fun f ((x!1 Real)) Real
  (ite (= x!1 11.0) 3.0
  (ite (= x!1 14.0) 1.0
    3.0)))
(_ as-array k!0)
[11 -> 49, 14 -> 21, else -> 49]
