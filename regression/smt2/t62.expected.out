5
--------
b
(let ((@x28 (monotonicity (rewrite (= (<= 5 0) false)) (= (not (<= 5 0)) (not false)))))
(let ((@x32 (trans @x28 (rewrite (= (not false) true)) (= (not (<= 5 0)) true))))
(let ((@x17 (monotonicity (rewrite (= (+ 3 2) 5)) (= (> (+ 3 2) 0) (> 5 0)))))
(let ((@x23 (trans @x17 (rewrite (= (> 5 0) (not (<= 5 0)))) (= (> (+ 3 2) 0) (not (<= 5 0))))))
(let ((@x37 (monotonicity (trans @x23 @x32 (= (> (+ 3 2) 0) true)) (= (and (> (+ 3 2) 0) b) (and true b)))))
(trans @x37 (rewrite (= (and true b) b)) (= (and (> (+ 3 2) 0) b) b)))))))
--------
(forall ((x Int)) (p (+ 5 x)))
(let (($x19 (forall ((?x Int) )(p (+ 5 ?x)))
))
(let (($x12 (forall ((?x Int) )(p (+ ?x 2 3)))
))
(let ((@x18 (monotonicity (rewrite (= (+ ?0 2 3) (+ 5 ?0))) (= (p (+ ?0 2 3)) (p (+ 5 ?0))))))
(|quant-intro| @x18 (= $x12 $x19)))))
--------
(select a 2)
(let ((?x18 (select a 2)))
(let ((?x19 (select (store (store a 0 10) 1 11) 2)))
(trans (rewrite (= ?x19 (select (store a 0 10) 2))) (rewrite (= (select (store a 0 10) 2) ?x18)) (= ?x19 ?x18))))
