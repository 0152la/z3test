true
true
true
true
true
true
true
true
true
"algebra"
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
(let ((a!1 (re.++ (re.++ r (re.* r)) (re.* (re.++ r (re.* r))))))
  (= (re.++ r (re.* r)) a!1))
true
(= (re.* r) (re.* (re.++ r (re.* r))))
true
true
true
true
true
true
true
true
true
"complement"
true
true
true
true
true
true
true
true
(= a "abc")
(str.in.re a (re.union (str.to.re "ab") (str.to.re "abc")))
sat
sat
(model 
  (define-fun a () String
    "ab")
)
sat
(model 
  (define-fun a () String
    "abab")
)
sat
(model 
  (define-fun a () String
    "ababab")
)
unsat
unsat
sat
(model 
  (define-fun a () String
    "abab")
)
sat
(model 
  (define-fun a () String
    "abab")
)
sat
(model 
  (define-fun a () String
    "ababab")
)
unsat
