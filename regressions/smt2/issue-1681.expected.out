sat
(model 
  (define-fun c () (Array Int Int)
    (lambda ((x!1 Int))
  (let ((a!1 (ite (and (not (<= 2 x!1)) (<= 1 x!1)) 5 10)))
    (ite (and (<= 2 x!1) (<= 1 x!1)) 7 (ite (<= 1 x!1) a!1 65)))))
  (define-fun b () (Array Int Int)
    (_ as-array k!18))
  (define-fun a () (Array Int Int)
    (_ as-array k!18))
  (define-fun lenc () Int
    2)
  (define-fun lena () Int
    0)
  (define-fun lenb () Int
    2)
  (define-fun k!18 ((x!0 Int)) Int
    (let ((a!1 (ite (and (not (<= 2 x!0)) (<= 1 x!0)) 5 11)))
      (ite (and (<= 2 x!0) (<= 1 x!0)) 7 (ite (<= 1 x!0) a!1 65))))
)
